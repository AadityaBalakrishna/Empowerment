package com.personalcapital.cache.support;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;

import com.personalcapital.cache.aop.support.CacheKeyProvider;
import com.personalcapital.cache.utils.CacheUtils;
import com.safepage.invest.data.SecurityId;
import com.safepage.util.DateTimeUtils;

public class QuoteCacheKeyProvider implements CacheKeyProvider
{
	private static Object extractKeyField(Object object)
	{
		if (object == null)
			return "";
		else if (object instanceof SecurityId)
		{
			String tmp = "";
			SecurityId securityId = (SecurityId) object;
			String symbol = securityId.getSymbol();
			String cusip = securityId.getCusip();
			if (symbol != null && !symbol.isEmpty())
				tmp = "Symbol:" + symbol.replace(' ', '/');
			else if (cusip != null && !cusip.isEmpty())
				tmp = "CUSIP:" + cusip.replace(' ', '/');

			return tmp;
		}
		else if (object instanceof Date)
			return DateTimeUtils.formatDate((Date) object);
		else
			return object;
	}

	public static String generateKey(Object... objects)
	{
		if (objects == null)
			return "";

		Collection<Object> keyObjects = new ArrayList<>(objects.length);
		for (Object object : objects)
		{
			keyObjects.add(extractKeyField(object));
		}

		return CacheUtils.generateKey("", keyObjects);
	}

	@Override
	public Object getKeyField(Object object)
	{
		return extractKeyField(object);
	}

}

