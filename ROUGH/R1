import io.micrometer.core.instrument.Metrics;
import io.micrometer.core.instrument.simple.SimpleMeterRegistry;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class PcapMultiCacheableAdviceBasicTest {

    private PcapMultiCacheableAdvice cacheAdvice;
    private SimpleMeterRegistry meterRegistry;

    @BeforeEach
    void setUp() {
        meterRegistry = new SimpleMeterRegistry();
        Metrics.addRegistry(meterRegistry);
        cacheAdvice = new PcapMultiCacheableAdvice();
    }

    @Test
    void testCacheFailureMetric() {
        // ✅ Expect `Throwable` when calling doMultiCacheable()
        assertThrows(Throwable.class, () -> cacheAdvice.doMultiCacheable(null, null));

        // ✅ Assert if the metric is recorded in Micrometer
        assertEquals(1, meterRegistry.get("pcap.cache.failure").counter().count(),
                     "Cache failure metric should be incremented");

        // ✅ Debugging output
        System.out.println("✅ Cache Failure Metric Count: " + 
                           meterRegistry.get("pcap.cache.failure").counter().count());
    }
}