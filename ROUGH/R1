package com.personalcapital.config;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.cloud.config.client.ConfigClientProperties;
import org.springframework.core.env.Environment;
import org.springframework.test.context.junit.jupiter.SpringJUnitConfig;
import com.esotericsoftware.minlog.Log;

import com.empower.epw.starter.config.store.EpwConfigServiceBootstrapConfiguration;

//@SpringBootTest(classes = EpwConfigServiceBootstrapConfiguration.class)
@SpringJUnitConfig(locations = "classpath:pcapConfigApplicationContext.xml")
public class TestConfig
{
	@Value("${rds.iam.username}")
	private String user;

	@Value("${identity.serverArray}")
	private String configprop;

	@Autowired
	private Environment environment;

	@Autowired
	private ConfigClientProperties configClientProperties;
	private Log logger;

	@Test
	public void testprofiles()
	{
		String awsAccount = environment.getProperty("aws.account", "defaultAccount");
		String identityStage = environment.getProperty("identity.stage", "defaultStage");
		String identityParentStage = environment.getProperty("identity.parentStage",
				"defaultParentStage");

		String profile = configClientProperties.getProfile();
		logger.info("Inferred Profiles:", profile);
	}

	@Test
	public void loadusername()
	{
		Assertions.assertNotNull(user);
		Assertions.assertEquals("root_app_devtrunk",
				environment.getProperty("rds.iam.username"));
	}

	@Test
	public void loadConfigProperties()
	{
		Assertions.assertNotNull(configprop);
		Assertions.assertEquals("pcap", configprop);
	}
}

