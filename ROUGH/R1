package com.epw.aws.service.config;

import com.amazonaws.services.kms.AWSKMS;
import com.amazonaws.services.kms.AWSKMSClientBuilder;
import com.empower.epw.aws.api.kms.EpwKmsService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.autoconfigure.condition.*;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import software.amazon.awssdk.auth.credentials.DefaultCredentialsProvider;
import software.amazon.awssdk.services.kms.KmsClient;
import software.amazon.awssdk.regions.Region;

@Configuration
public class EpwAwsKmsAutoConfig {

    private static final Logger logger = LoggerFactory.getLogger(EpwAwsKmsAutoConfig.class);

    // ----------- SDK v2 Configuration -----------

    @Bean
    @ConditionalOnProperty(name = "epw.aws.kms.sdk.version", havingValue = "v2")
    @ConditionalOnMissingBean(KmsClient.class)
    public KmsClient defaultKmsClient() {
        logger.info("Creating default AWS SDK v2 KmsClient with default credentials.");
        return KmsClient.builder()
                .credentialsProvider(DefaultCredentialsProvider.create())
                .region(Region.US_WEST_2) // or use @Value for region
                .build();
    }

    @Bean
    @Primary
    @ConditionalOnProperty(name = "epw.aws.kms.sdk.version", havingValue = "v2")
    @ConditionalOnMissingBean(EpwKmsService.class)
    public EpwKmsService epwKmsServiceV2(KmsClient kmsClient) {
        logger.info("Creating EpwKmsService bean for AWS SDK v2.");
        return new com.empower.epw.sdk.v2.adapter.kms.EpwKmsServiceImpl(kmsClient);
    }

    // ----------- SDK v1 Configuration -----------

    @Bean
    @ConditionalOnProperty(name = "epw.aws.kms.sdk.version", havingValue = "v1", matchIfMissing = true)
    @ConditionalOnMissingBean(AWSKMS.class)
    public AWSKMS defaultAwsKmsClient() {
        logger.info("Creating default AWS SDK v1 AWSKMS client.");
        return AWSKMSClientBuilder.standard().build();
    }

    @Bean
    @Primary
    @ConditionalOnProperty(name = "epw.aws.kms.sdk.version", havingValue = "v1", matchIfMissing = true)
    @ConditionalOnMissingBean(EpwKmsService.class)
    public EpwKmsService epwKmsServiceV1(AWSKMS awsKmsClient) {
        logger.info("Creating EpwKmsService bean for AWS SDK v1.");
        return new com.empower.epw.sdk.v1.adapter.kms.EpwKmsServiceImpl(awsKmsClient);
    }
}
