import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.redisson.api.RBucket;
import org.redisson.api.RedissonClient;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class PcapMultiCacheableAdviceTest {

    private RedissonClient redissonClient;
    private RBucket<Object> mockBucket;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);

        redissonClient = mock(RedissonClient.class);
        mockBucket = mock(RBucket.class); // Explicitly create a mock

        when(redissonClient.getBucket(anyString())).thenReturn(mockBucket);
    }

    @Test
    void testCacheHit() {
        when(mockBucket.get()).thenReturn("cachedValue");  // Simulate cache hit

        String cachedValue = (String) redissonClient.getBucket("testKey").get();

        assert cachedValue.equals("cachedValue"); // Validate cache hit
        verify(mockBucket, times(1)).get();
    }
}
