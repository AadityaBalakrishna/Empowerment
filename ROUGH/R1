package com.personalcapital.cache.annotation;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import com.personalcapital.cache.aop.support.CacheKeyProvider;
import com.personalcapital.cache.aop.support.DefaultCacheKeyProvider;

/**
 * Cache for objects written using lower level apis for redis, doesn't use spring caching
 */
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
public @interface PcapMultiCacheable
{
	String value();

	String keyPrefix() default "";

	int[] keys() default {};

	String resultKeyField() default "";

	String[] resultKeyFields() default {};

	boolean nullable() default false;

	// 1800 seconds ttl be default for any cached object
	int ttlSeconds() default 1800;

	Class<? extends CacheKeyProvider> keyProvider() default DefaultCacheKeyProvider.class;

	RedisType redisType() default RedisType.GEN;
}
