<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Enables property resolution -->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <value>classpath:application-override.properties</value>
            </list>
        </property>
    </bean>

    <!-- Conditionally Load SafePageConfigurer -->
    <bean id="safePageConfigurer" class="com.personalcapital.config.SafePageConfigurer"
          factory-method="getSafePageConfigurerForEks"
          lazy-init="true"
          depends-on="propertyConfigurer"
          p:enabled="#{ systemProperties['epw.starter.config.enabled'] == 'false' }">
        <constructor-arg>
            <list>
                <value>application</value>
            </list>
        </constructor-arg>
        <constructor-arg>
            <list>
                <value>application-override.properties</value>
            </list>
        </constructor-arg>
        <constructor-arg value="pcap"/>
    </bean>

    <!-- Conditionally Load EPW Starter -->
    <bean id="epwconfig" class="com.empower.epw.starter.config.store.EpwConfigServiceBootstrapConfiguration"
          lazy-init="true"
          depends-on="propertyConfigurer"
          p:enabled="#{ systemProperties['epw.starter.config.enabled'] == 'true' }">
        <constructor-arg ref="env"/>
    </bean>

    <bean id="env" class="org.springframework.core.env.StandardEnvironment"/>
</beans>


package com.empower.epw.account.config;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.ApplicationContext;
import org.springframework.core.env.Environment;
import org.springframework.test.context.ContextConfiguration;

@SpringBootTest
@ContextConfiguration(locations = "classpath:epwconfig.xml")
public class PcapConfigPoCLatest {

    @Autowired
    private Environment environment;

    @Autowired
    private ApplicationContext context;

    @Value("${epw.account.datasource.username:NOT_FOUND}")
    private String user;

    @Test
    public void testBeanLoaded() {
        if (context.containsBean("safePageConfigurer")) {
            System.out.println("[TEST] ✅ SafePageConfigurer is ACTIVE");
        } else if (context.containsBean("epwconfig")) {
            System.out.println("[TEST] ✅ EPW Starter is ACTIVE");
        } else {
            System.out.println("[TEST] ❌ No expected beans are loaded!");
        }
    }

    @Test
    public void loadPropertyFromConfig() {
        String resolvedUser = environment.getProperty("epw.account.datasource.username", "NOT_FOUND");
        System.out.println("[TEST DEBUG] Loaded Property in Test: " + resolvedUser);

        Assertions.assertNotEquals("NOT_FOUND", resolvedUser, "Property should have been resolved!");
        Assertions.assertEquals("acct_app_devtrunk", resolvedUser);
    }
}
