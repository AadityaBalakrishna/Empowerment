package com.empower.epw.aws.api.kms.exception;

public class KMSOperationException extends RuntimeException
{
	public KMSOperationException(String message, Throwable cause)
	{
		super(message, cause);
	}
}

i have this, and now, i have this:

package com.empower.epw.aws.v1.kms.util;

import com.empower.epw.aws.api.kms.exception.KMSOperationException;
import com.personalcapital.log.PcapLogger;
import com.personalcapital.log.PcapLoggerFactory;

public class AwsExceptionHandler
{
	private static final PcapLogger logger = PcapLoggerFactory
			.getPcapLogger(AwsExceptionHandler.class);

	public static KMSOperationException handleKMSException(String sdkVersion, String operation, String keyId,
			Exception e)
	{
		String errorMessage = String.format("'%s' KMS operation '%s' failed for keyId '%s': %s",
				sdkVersion, operation, keyId, e.getMessage());
		logger.error(errorMessage, e);
		return new KMSOperationException(errorMessage, e);
	}
}

both seem common for v1 iimpl and v2 impl, so how to reduce this redundancy?
