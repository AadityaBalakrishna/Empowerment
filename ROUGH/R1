@Test
void testDescribeKeyReturnsValidMetadata() {
    DescribeKeyResponseDTO response = epwKmsService.describeKey(KEY_ID);
    assertNotNull(response);
    assertEquals(KEY_ID, response.getKeyId());
    assertNotNull(response.getKeyArn());
    assertNotNull(response.getKeyState());
    assertTrue(response.isEnabled());
}

@Test
void testDescribeKeyReturnsEmptyDtoForInvalidKeyId() {
    DescribeKeyResponseDTO response = epwKmsService.describeKey("invalid-key-id");
    assertNotNull(response);
    assertNull(response.getKeyId());
    assertNull(response.getKeyArn());
    assertNull(response.getKeyState());
    assertFalse(response.isEnabled());
}

@Test
void testListAliasesReturnsExpectedAliases() {
    ListAliasesResponseDTO response = epwKmsService.listAliases();
    assertNotNull(response);
    assertNotNull(response.getAliases());
    assertFalse(response.getAliases().isEmpty());
    assertNotNull(response.getAliases().get(0).getAliasName());
    assertNotNull(response.getAliases().get(0).getTargetKeyId());
}

@Test
void testListAliasesReturnsEmptyListWhenNoAliasesPresent() {
    // Setup LocalStack with no aliases (if possible in test env)
    ListAliasesResponseDTO response = epwKmsService.listAliases();
    assertNotNull(response);
    assertNotNull(response.getAliases());
    assertTrue(response.getAliases().isEmpty());
}

@Nested
class NegativeCasesForDescribeKeyAndListAliases {
    @Test
    void testDescribeKeyThrowsKMSOperationExceptionForNullKeyId() {
        KMSOperationException exception = assertThrows(
            KMSOperationException.class,
            () -> epwKmsService.describeKey(null)
        );
        assertTrue(exception.getMessage().contains("keyId"));
    }

    @Test
    void testListAliasesReturnsEmptyDtoOnFailure() {
        // Force a failure by injecting a broken/misconfigured client
        EpwKmsService brokenService = new EpwKmsServiceImpl(null);
        ListAliasesResponseDTO response = brokenService.listAliases();
        assertNotNull(response);
        assertNotNull(response.getAliases());
        assertTrue(response.getAliases().isEmpty());
    }
}
