package com.safepage.security.service.impl;

import com.amazonaws.services.kms.model.DisabledException;
import com.empower.epw.aws.api.kms.EpwKmsService;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.junit.jupiter.api.Assertions.assertNull;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class KMSServiceImplUnitTest {

    @Mock
    private EpwKmsService mockEpwKmsService;

    @InjectMocks
    private KMSServiceImpl kmsService;

    @Test
    void testEncryptUsingAWSKey_ThrowsDisabledException() {
        String plainText = "testPlainText";
        String keyId = "testKeyId";

        // mock epwKmsService to throw the exception
        when(mockEpwKmsService.encryptUsingAWSKey(any(), any()))
                .thenThrow(new DisabledException("Key is disabled"));

        // call the method under test
        String result = kmsService.encryptUsingAWSKey(plainText, keyId);

        // verify behavior
        assertNull(result, "Result should be null when an exception occurs");
        verify(mockEpwKmsService, times(1)).encryptUsingAWSKey(any(), any());
    }
}
