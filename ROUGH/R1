old client creation:

private AWSKMS getKMSClient()
	{
		if (kmsClient == null)
		{
			AWSCredentialsManager awsCredentialsManager = new AWSCredentialsManager();
			kmsClient = (AWSKMS) awsCredentialsManager
					.getClientBuilderWithCredentials(AWSKMSClient.builder())
					.build();
		}
		return kmsClient;
	}

old resource -
package com.personalcapital.aws;

import com.amazonaws.auth.AWSCredentialsProvider;
import com.amazonaws.client.builder.AwsClientBuilder;
import com.empower.epw.plat.aws.AwsSdkUtils;

import static com.empower.epw.plat.aws.AwsSdkUtils.AWS_CREDENTIALS_PROVIDER;

/**
 * How to manage credentials (access key id and secret access key), in the AWS SDKs in a secure way.
 * <a href=
 * "https://aws.amazon.com/blogs/security/a-new-and-standardized-way-to-manage-credentials-in-the-aws-sdks/">
 *
 * @author dizadi
 */
public class AWSCredentialsManager
{

	@Deprecated(forRemoval = true, since = "2023.25")
	public static final String DEFAULT_AWS_REGION = AwsSdkUtils.AWS_REGION;
	@Deprecated(forRemoval = true, since = "2023.25")
	public static final String AWS_REGION_KEY = AwsSdkUtils.AWS_REGION_KEY;

	@Deprecated(forRemoval = true, since = "2023.26")
	public AWSCredentialsProvider getCredentials()
	{
		return AWS_CREDENTIALS_PROVIDER;
	}

	@Deprecated(forRemoval = true, since = "2023.26")
	public <T extends AwsClientBuilder<T, R>, R> AwsClientBuilder<T, R> getClientBuilderWithCredentials(
			AwsClientBuilder<T, R> builder)
	{
		return AwsSdkUtils.builder(builder);
	}

}


new client creation:
@Configuration
public class EpwKmsAutoConfig
{

	private static final Logger logger = LoggerFactory.getLogger(EpwKmsAutoConfig.class);
	private static final String DEFAULT_AWS_REGION = "us-west-2";
	public static final String AWS_REGION_KEY = "aws.region";
	public static final String AWS_PROFILE = "aws.profile";

@Bean(name = "epwAWSKMSClient")
	@ConditionalOnProperty(name = "epw.aws.kms.sdk-version", havingValue = "v1", matchIfMissing = true)
	public AWSKMS awsKmsClient()
	{
		String awsRegion = System.getProperty(AWS_REGION_KEY, DEFAULT_AWS_REGION);
		String awsProfile = System.getProperty(AWS_PROFILE);
		com.amazonaws.auth.AWSCredentialsProvider credentialsProvider;
		if (StringUtils.hasText(awsProfile))
		{
			logger.info("Using AWS profile for AWS SDK v1: {}", awsProfile);
			credentialsProvider = new com.amazonaws.auth.profile.ProfileCredentialsProvider(
					awsProfile);
		}
		else
		{
			logger.info("Using default AWS credentials provider chain.");
			credentialsProvider = com.amazonaws.auth.DefaultAWSCredentialsProviderChain
					.getInstance();
		}
		logger.info("Creating AWSKMS client with region for AWS SDK v1: {}", awsRegion);
		return AWSKMSClientBuilder.standard()
				.withCredentials(credentialsProvider)
				.withRegion(awsRegion)
				.build();
	}

	@Bean(name = "epwAwsKmsService")
	@ConditionalOnProperty(name = "epw.aws.kms.sdk-version", havingValue = "v1", matchIfMissing = true)
	public EpwKmsService epwKmsServiceV1(@Qualifier("epwAWSKMSClient") AWSKMS awsKmsClient)
	{
		logger.info("Creating EpwKmsService bean for AWS SDK v1.");
		return new com.empower.epw.aws.v1.kms.EpwKmsServiceImpl(awsKmsClient);
	}
}


error i am facing:
2025-09-15 10:45:51 AM [sqsThread5] [trace_id: 231d1a13-e956-4567-8d9d-f4fe50880b78 / span_id: 0dc15962-043b-4f6a-9ad4-6ded3c72fc34] WARN   com.safepage.security.CryptEngine - Failed to decrypt because: com.empower.epw.aws.api.kms.exception.KMSOperationException: 'AWS SDK v1' KMS operation 'decryptUsingAWSKey' failed for keyId 'null': User: arn:aws:sts::179355710817:assumed-role/PCAP-PCAPEKS-QASTAGING-EKS-SERVER-ROLES-Fp/aws-sdk-java-1757952577626 is not authorized to perform: kms:Decrypt on the resource associated with this ciphertext because the resource does not exist in this Region, no resource-based policies allow access, or a resource-based policy explicitly denies access (Service: AWSKMS; Status Code: 400; Error Code: AccessDeniedException; Request ID: b6bb4a55-7646-4e2d-8172-908fedc395fc; Proxy: null)


what could be the reason?
