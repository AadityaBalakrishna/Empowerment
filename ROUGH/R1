Hereâ€™s a structured way you can assign this validation task to QA. You want to be clear about what was changed, where it was changed, and how QA can validate that nothing broke.


---

QA Validation Task: Removal of pcap-analytics-dao Module

Summary of Change:

The module pcap-analytics-dao has been removed from pcap-server.

Out of 16 files in this module, 4 files were still in use. These were migrated to pcap-apps-common:

TransactionClassificationData.java

TransactionData.java

AdvisoryFeeCategorizationEngine.java

TrainingData.java


The remaining files (12) were unused across the codebase and have been deleted.

All consumer repositories that had pcap-analytics-dao listed under dependencyManagement (but not directly used) have had the entry removed:

pcap-root, epw-wm-artifacts, pcap-salesforce, pcap-server, pcap-agent, pcap-admin, pcap-mv, pcap-ace


Jenkins builds have already passed successfully for all affected consumers.



---

QA Validation Scope

1. Migration Validation

Ensure the 4 migrated files (TransactionClassificationData, TransactionData, AdvisoryFeeCategorizationEngine, TrainingData) are present in pcap-apps-common.

Verify functionality depending on these classes (for example, categorization, training data handling) continues to work as before.

Run any automated tests that cover these classes.



2. Dependency Removal Validation

Confirm that pcap-analytics-dao is no longer listed as a dependency in dependencyManagement in all the consumer repos.

Validate that no runtime errors (like ClassNotFoundException or NoClassDefFoundError) occur due to missing classes.



3. Functional Regression Testing

Run existing regression tests on the affected modules, especially areas that use:

Transaction classification

Advisory fee categorization

Training data workflows


Sanity-check core flows in pcap-server and consumer apps (pcap-agent, pcap-admin, etc.).



4. Build & Deployment Validation

Confirm Jenkins builds are still green after dependency cleanup (already verified, but QA should cross-check).

Deploy to a test environment and validate that services dependent on these modules start up without errors.





---

Acceptance Criteria for Sign-off

All consumer repos build and deploy without errors.

Regression tests pass successfully.

No missing dependency or runtime issues are observed.

Business workflows depending on the migrated classes (TransactionClassificationData, TransactionData, AdvisoryFeeCategorizationEngine, TrainingData) behave as before.



---

ðŸ‘‰ You can assign QA with a JIRA/linear ticket like this:

Title: Validate removal of pcap-analytics-dao and migration of used classes to pcap-apps-common
Description: Please validate that the removal of pcap-analytics-dao and migration of the 4 used classes into pcap-apps-common did not introduce any regression. Ensure that all dependent repos build and deploy fine, and that the functionality relying on these classes continues to work.


---

Would you like me to also draft a short checklist format (step-by-step items) that QA can literally tick off while validating? That way, itâ€™s more action-oriented for them.

