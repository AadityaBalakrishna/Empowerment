package com.epw.aws.service.config;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.kms.AWSKMS;
import com.amazonaws.services.kms.AWSKMSClientBuilder;
import com.empower.epw.aws.api.kms.EpwKmsService;
import com.empower.epw.sdk.v1.adapter.kms.EpwKmsServiceImpl as EpwKmsServiceV1Impl;
import com.empower.epw.sdk.v2.adapter.kms.EpwKmsServiceImpl as EpwKmsServiceV2Impl;

import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import software.amazon.awssdk.services.kms.KmsClient;

@Configuration
public class EpwAwsKmsAutoConfig {

    // AWS SDK v1: KMS Client
    @Bean
    @ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v1", matchIfMissing = true)
    public AWSKMS awsKmsClient() {
        return AWSKMSClientBuilder.standard().build();
    }

    // AWS SDK v2: KMS Client
    @Bean
    @ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v2")
    public KmsClient kmsClient() {
        return KmsClient.builder().build();
    }

    // AWS SDK v1: EpwKmsServiceImpl (v1)
    @Bean(name = "epwKmsService")
    @Primary
    @ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v1", matchIfMissing = true)
    public EpwKmsService epwKmsServiceV1(AWSKMS awsKmsClient) {
        return new EpwKmsServiceV1Impl(awsKmsClient);
    }

    // AWS SDK v2: EpwKmsServiceImpl (v2)
    @Bean(name = "epwKmsService")
    @Primary
    @ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v2")
    public EpwKmsService epwKmsServiceV2(KmsClient kmsClient) {
        return new EpwKmsServiceV2Impl(kmsClient);
    }
}
