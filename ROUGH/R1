public String encryptUsingAWSKey(String plainText, String keyId)
{
    if (StringUtils.isEmpty(plainText))
    {
        throw new KMSOperationException("Invalid input: plainText is required!", null);
    }
    if (StringUtils.isEmpty(keyId))
    {
        throw new KMSOperationException("Invalid input: keyId is required!", null);
    }

    try
    {
        EncryptRequest encryptRequest = new EncryptRequest()
                .withKeyId(keyId)
                .withPlaintext(getByteBuffer(plainText));

        long start = System.currentTimeMillis();
        EncryptResult result = getKMSClient().encrypt(encryptRequest);

        if (result != null && result.getCiphertextBlob() != null)
        {
            long end = System.currentTimeMillis();
            logger.info("encryptData took {} ms", (end - start));
            return Utils.encodeBase64(result.getCiphertextBlob().array());
        }

        throw new KMSOperationException(
                String.format("EncryptResult was null for keyId '%s'", keyId), null);
    }
    catch (DisabledException | KeyUnavailableException e)
    {
        throw AwsExceptionHandler.handleKMSException("AWS SDK v1", "encrypt", keyId, e);
    }
    catch (Exception e)
    {
        throw AwsExceptionHandler.handleKMSException("AWS SDK v1", "encrypt", keyId, e);
    }
}
