Metric Naming and Tagging Guidelines
Following these patterns will help with dashboard and monitor creation as well as ad-hoc queries with “Metrics Explorer”. We need to be aware of the cardinality of these values since they count as unique metrics from a billing point of view, more details in custom metrics docs.

Metrics
Metric naming should follow a consistent pattern.

The metric name should:

be short but meaningful.

start with a letter, lower case alphanumeric

reflect a hierarchy using dot separator – namespace.category.metric.stats 

use underscore for multi-word segments e.g. pc.queue.commands_sent pc.salesforce.api_count

stay within 3 - 5 segments

avoid duplicating tags in the metric name

When pushing custom metrics you can specify a type, if the type is HISTOGRAM the following metrics are added by the agent:

<METRIC_NAME>.avg

<METRIC_NAME>.count

<METRIC_NAME>.median

<METRIC_NAME>.95percentile

<METRIC_NAME>

We should use the HISTOGRAM type when appropriate and let the agent do the math (and the naming)

The following custom metric naming conventions are enforced by DataDog:

Metric names must start with a letter.

Metric names must only contain ASCII alphanumerics, underscores, and periods.

Other characters, including spaces, are converted to underscores.

Unicode is not supported.

Metric names must not exceed 200 characters. Fewer than 100 is preferred from a UI perspective.

Note: Metric names are case sensitive in Datadog.

Tags
Tags should be used to embed parameterized details into the metrics. Using tags is a better pattern than embedding the information inside the metric name.

NOTE: The DataDog agent is already collecting cluster level tags, like dd-stage, dd-silo, dd-service and dd-app. These tags will be added to every custom metric by the agent.

The tag name should:

start with a letter, lower case alphanumeric

use underscore for multi-word separator

Each metric must include App Required tag: kube_service  The value of this tag must match the value in the helm file (and k8s metrics). We are using  kube_service with all custom metrics to help with dashboard creation.  kube_service tag is added by the agent through the K8s and istio integrations, so when we create a dashboard that contains both custom and integration metrics we can use one tag -  kube_service . This is the reason that, for custom metrics, we need to make sure it matches the value used by the integration metrics.

Examples of Optional App tags:

context

originator

dest_service

Examples
Example for Billable API for Salesforce
In this example we will measure the number of APIs Calls to Salesforce.

namespace.category.metric.stats  : pc.salesforce.api_count




kube_service

eks: sf-service, snap-service, aggr-service, pcb-service, etc

The name of the app originating the request

dest_service (required)

salesforce

Mostly for billable API, i.e giact / yodlee / xignite

category (required)

api

metric (required)

count

Type of the metric: Count, Histogram, Time etc

stats

? (we get this from DD console)

Below are Datadog’s tagging restrictions, requirements, and suggestions:

Tags must start with a letter and after that may contain the characters listed below:

Alphanumerics

Underscores

Minuses

Colons

Periods

Slashes

Other special characters are converted to underscores.

Note: A tag cannot end with a colon, for example tag:

Tags can be up to 200 characters long and support Unicode.

Tags are converted to lowercase. Therefore, CamelCase tags are not recommended. Authentication (crawler) based integrations convert camel case tags to underscores, for example TestTag –> test_tag.

check these guidlines, also ig we need to do these for other classes like PcapCacehableAdvice, and PcapMultiCacheEvictAdvice etc, etc so look into the naming of this metrics too
