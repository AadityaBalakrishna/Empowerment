@Override
public DescribeKeyDTO describeKey(String keyId) {
    DescribeKeyRequest request = new DescribeKeyRequest().withKeyId(keyId);
    DescribeKeyResult result = getKMSClient().describeKey(request);

    if (result != null && result.getKeyMetadata() != null) {
        KeyMetadata metadata = result.getKeyMetadata();
        DescribeKeyDTO dto = new DescribeKeyDTO();
        dto.setKeyId(metadata.getKeyId());
        dto.setKeyArn(metadata.getArn());
        dto.setKeyState(metadata.getKeyState());
        return dto;
    }

    return null;
}

@Override
public ListAliasesDTO getKeyAliases(String keyId) {
    ListAliasesRequest request = new ListAliasesRequest().withLimit(10); // keyId unused here, keeping as-is
    ListAliasesResult result = getKMSClient().listAliases(request);

    ListAliasesDTO dto = new ListAliasesDTO();
    if (result != null && result.getAliases() != null) {
        List<String> aliasNames = result.getAliases()
            .stream()
            .map(AliasListEntry::getAliasName)
            .collect(Collectors.toList());
        dto.setAliases(aliasNames);
    }

    return dto;
}
