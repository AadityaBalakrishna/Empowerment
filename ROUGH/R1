
+
58
âˆ’
0

Viewed
package com.empower.epw.aws.service.config;

import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import software.amazon.awssdk.services.s3.S3Client;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import software.amazon.awssdk.services.s3.presigner.S3Presigner;

@Configuration
public class AwsS3Configuration
{

	// Shared AmazonS3 client for AWS SDK v1
	@Bean
	@ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v1", matchIfMissing = true)
	public AmazonS3 amazonS3Client()
	{
		return AmazonS3ClientBuilder.standard()
				.build();
	}

	// Shared S3Client for AWS SDK v2
	@Bean
	@ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v2")
	public S3Client s3Client()
	{
		return S3Client.builder()
				.build();
	}

	@Bean
	@ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v2")
	public S3Presigner s3Presigner()
	{
		return S3Presigner.builder()
				.build();
	}

	// Conditional adapter for AWS SDK v1
	@Bean(name = "awsS3Service")
	@ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v1", matchIfMissing = true)
	public com.empower.epw.sdk.v1.adapter.AwsS3ServiceImpl awsS3ServiceV1(AmazonS3 amazonS3Client)
	{
		return new com.empower.epw.sdk.v1.adapter.AwsS3ServiceImpl(amazonS3Client);
	}

	// Conditional adapter for AWS SDK v2
	@Bean(name = "awsS3Service")
	@ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v2")
	public com.empower.epw.sdk.v2.adapter.AwsS3ServiceImpl awsS3ServiceV2(S3Client s3Client,
			S3Presigner s3Presigner)
	{
		return new com.empower.epw.sdk.v2.adapter.AwsS3ServiceImpl(s3Client, s3Presigner);
	}

}

follow this logic
