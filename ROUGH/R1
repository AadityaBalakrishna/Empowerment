package com.epw.aws.service.config;

import com.amazonaws.services.kms.AWSKMS;
import com.amazonaws.services.kms.AWSKMSClientBuilder;
import com.empower.epw.aws.api.kms.EpwKmsService;

import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;

import software.amazon.awssdk.services.kms.KmsClient;

/**
 * {@code EpwAwsKmsAutoConfig} sets up AWS KMS clients and service beans
 * based on the configured SDK version (v1 or v2).
 *
 * <p>This configuration allows dynamic switching between AWS SDK v1 and SDK v2
 * by setting the {@code aws.sdk.version} property.
 * 
 * <ul>
 *   <li>v1: {@code aws.sdk.version=v1} or missing (default)</li>
 *   <li>v2: {@code aws.sdk.version=v2}</li>
 * </ul>
 */
@Configuration
public class EpwAwsKmsAutoConfig {

    /**
     * Creates the AWS SDK v1 KMS client.
     *
     * @return an instance of {@link AWSKMS}
     */
    @Bean
    @ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v1", matchIfMissing = true)
    public AWSKMS awsKmsClient() {
        return AWSKMSClientBuilder.standard().build();
    }

    /**
     * Creates the AWS SDK v2 KMS client.
     *
     * @return an instance of {@link KmsClient}
     */
    @Bean
    @ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v2")
    public KmsClient kmsClient() {
        return KmsClient.builder().build();
    }

    /**
     * Provides the SDK v1 implementation of {@link EpwKmsService}.
     *
     * @param awsKmsClient the AWS SDK v1 KMS client
     * @return the SDK v1-based {@link EpwKmsService} implementation
     */
    @Bean
    @Primary
    @ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v1", matchIfMissing = true)
    public EpwKmsService epwKmsServiceV1(AWSKMS awsKmsClient) {
        return new com.empower.epw.sdk.v1.adapter.kms.EpwKmsServiceImpl(awsKmsClient);
    }

    /**
     * Provides the SDK v2 implementation of {@link EpwKmsService}.
     *
     * @param kmsClient the AWS SDK v2 KMS client
     * @return the SDK v2-based {@link EpwKmsService} implementation
     */
    @Bean
    @Primary
    @ConditionalOnProperty(name = "aws.sdk.version", havingValue = "v2")
    public EpwKmsService epwKmsServiceV2(KmsClient kmsClient) {
        return new com.empower.epw.sdk.v2.adapter.kms.EpwKmsServiceImpl(kmsClient);
    }
}
