    @Test
    void testEncrypt_NullPlaintext_ThrowsException() {
        SafePageException ex = assertThrows(SafePageException.class,
                () -> kmsService.encryptUsingAWSKey(null, AWS_CMK_KEY_ALIAS));

        assertTrue(ex.getMessage().contains("plainText is required!"));
    }

    @Test
    void testEncrypt_EmptyKeyId_ThrowsException() {
        SafePageException ex = assertThrows(SafePageException.class,
                () -> kmsService.encryptUsingAWSKey("someText", ""));

        assertTrue(ex.getMessage().contains("keyId is required!"));
    }

    @Test
    void testEncrypt_Failure_ReturnsNull() {
        // supply an invalid key alias to force AWS KMS failure
        String result = kmsService.encryptUsingAWSKey("someText", "alias/this/does/not/exist");

        assertNull(result, "Should return null when encryption fails");
    }
