import org.springframework.boot.test.context.DynamicPropertyRegistry;
import org.springframework.boot.test.context.DynamicPropertySource;
import org.testcontainers.containers.localstack.LocalStackContainer;
import org.testcontainers.utility.DockerImageName;
import software.amazon.awssdk.services.sqs.SqsClient;
import software.amazon.awssdk.services.sqs.model.CreateQueueRequest;

@SpringBootTest
@Testcontainers
public class CrmGatewaySqsIT {

    static final LocalStackContainer localstack = new LocalStackContainer(DockerImageName.parse("localstack/localstack:latest"))
        .withServices(LocalStackContainer.Service.SQS);

    @DynamicPropertySource
    static void registerProps(DynamicPropertyRegistry registry) {
        localstack.start();
        registry.add("spring.cloud.aws.sqs.endpoint", localstack::getEndpointOverride);
        registry.add("spring.cloud.aws.region.static", localstack::getRegion);
        registry.add("spring.cloud.aws.credentials.access-key", localstack::getAccessKey);
        registry.add("spring.cloud.aws.credentials.secret-key", localstack::getSecretKey);
    }

    @BeforeAll
    static void setupQueue() {
        SqsClient sqsClient = SqsClient.builder()
                .endpointOverride(localstack.getEndpointOverride(LocalStackContainer.Service.SQS))
                .region(localstack.getRegion())
                .credentialsProvider(localstack.getDefaultCredentialsProvider())
                .build();

        sqsClient.createQueue(CreateQueueRequest.builder()
                .queueName("DEV_CRM_GATEWAY_NORMAL")
                .build());
    }
}
